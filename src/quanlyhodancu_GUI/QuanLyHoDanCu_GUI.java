/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quanlyhodancu_GUI;

import java.awt.HeadlessException;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.table.DefaultTableModel;
import quanlyhodancu_CONSOLE.HoGiaDinh;
import quanlyhodancu_CONSOLE.KhuPho;
import quanlyhodancu_CONSOLE.Nguoi;

/**
 *
 * @author Administrator
 */
public class QuanLyHoDanCu_GUI extends javax.swing.JFrame {
    KhuPho khuPho = new KhuPho();

    /**
     * Creates new form QuanLyHoDanCu_GUI
     */
    public QuanLyHoDanCu_GUI() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        tableInfo.getTableHeader().setReorderingAllowed(false);
        jMenuItem_Save.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, InputEvent.CTRL_DOWN_MASK));
        jMenuItem_Open.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_O, InputEvent.CTRL_DOWN_MASK));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableInfo = new javax.swing.JTable();
        btnThem = new javax.swing.JButton();
        btnTimKiem = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        soCMNDTextField = new javax.swing.JTextField();
        hoVaTenTextField = new javax.swing.JTextField();
        tuoiTextField = new javax.swing.JTextField();
        ngheNghiepTextField = new javax.swing.JTextField();
        soNhaTextField = new javax.swing.JTextField();
        btnClear = new javax.swing.JButton();
        timKiemTextField = new javax.swing.JTextField();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        btnXoa = new javax.swing.JButton();
        btnShowALL = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnOpen = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem_Open = new javax.swing.JMenuItem();
        jMenuItem_Save = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản Lý Hộ Dân Cư");
        setBackground(new java.awt.Color(255, 0, 0));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("QUẢN LÝ HỘ DÂN CƯ");

        tableInfo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tableInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CMND", "Họ và tên", "Tuổi", "Nghề nghiệp", "Số nhà"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableInfo);

        btnThem.setText("THÊM");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        jLabel2.setText("Số CMND:");

        jLabel3.setText("Họ và tên:");

        jLabel4.setText("Tuổi:");

        jLabel5.setText("Nghề nghiệp:");

        jLabel6.setText("Số nhà:");

        soCMNDTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                soCMNDTextFieldActionPerformed(evt);
            }
        });

        tuoiTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tuoiTextFieldActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        timKiemTextField.setForeground(new java.awt.Color(153, 153, 153));
        timKiemTextField.setText("Nhập vào số CMND cần tìm");
        timKiemTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                timKiemTextFieldMouseClicked(evt);
            }
        });
        timKiemTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timKiemTextFieldActionPerformed(evt);
            }
        });

        jLayeredPane2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnXoa.setText("Xóa thông tin người dùng");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnShowALL.setText("Hiên toàn bộ thông tin khu phố");
        btnShowALL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowALLActionPerformed(evt);
            }
        });

        btnUpdate.setText("Sửa thông tin người dùng");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnSave.setText("SAVE");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnOpen.setText("OPEN");
        btnOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("CHỨC NĂNG");

        jLayeredPane2.setLayer(btnXoa, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(btnShowALL, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(btnUpdate, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(btnSave, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(btnOpen, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane2Layout = new javax.swing.GroupLayout(jLayeredPane2);
        jLayeredPane2.setLayout(jLayeredPane2Layout);
        jLayeredPane2Layout.setHorizontalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnXoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnShowALL, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 193, Short.MAX_VALUE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnOpen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPane2Layout.setVerticalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnXoa)
                .addGap(18, 18, 18)
                .addComponent(btnUpdate)
                .addGap(18, 18, 18)
                .addComponent(btnSave)
                .addGap(18, 18, 18)
                .addComponent(btnOpen)
                .addGap(18, 18, 18)
                .addComponent(btnShowALL)
                .addContainerGap())
        );

        jMenu1.setText("File");

        jMenuItem_Open.setText("Open");
        jMenuItem_Open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_OpenActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem_Open);

        jMenuItem_Save.setText("Save");
        jMenuItem_Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_SaveActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem_Save);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(hoVaTenTextField)
                                    .addComponent(tuoiTextField)
                                    .addComponent(ngheNghiepTextField)
                                    .addComponent(soNhaTextField)
                                    .addComponent(soCMNDTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(btnThem)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnClear))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(timKiemTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnTimKiem)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLayeredPane2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {hoVaTenTextField, ngheNghiepTextField, soCMNDTextField, soNhaTextField, tuoiTextField});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(soCMNDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(hoVaTenTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(tuoiTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(ngheNghiepTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(soNhaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnClear)
                            .addComponent(btnThem))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(timKiemTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTimKiem)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void soCMNDTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_soCMNDTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_soCMNDTextFieldActionPerformed

    private void tuoiTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tuoiTextFieldActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_tuoiTextFieldActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        if(btnThem.getText().equals("UPDATE")){
            if(!checkfill()){
                JOptionPane.showMessageDialog(rootPane, "Bạn chưa điền đầy đủ thông tin");
            }else if(!checkFolmatTuoi(soCMNDTextField.getText())){
                JOptionPane.showMessageDialog(rootPane, "Định dạng sô CMND không hợp lệ");
                soCMNDTextField.setText("");
            }else if(!checkFolmatTuoi(tuoiTextField.getText())){
                JOptionPane.showMessageDialog(rootPane, "Định dạng tuổi không hợp lệ");
                tuoiTextField.setText("");
            }else if(Integer.parseInt(tuoiTextField.getText())<0){
                JOptionPane.showMessageDialog(rootPane, "Tuổi phải lớn hơn 0");
                tuoiTextField.setText("");
            }else if(!checkFolmatHoVaTen(hoVaTenTextField.getText())){
                JOptionPane.showMessageDialog(rootPane, "Bạn đã nhập sai định dạng họ và tên");
                hoVaTenTextField.setText("");
            }else if(!checkFolmatHoVaTen(ngheNghiepTextField.getText())){
                JOptionPane.showMessageDialog(rootPane, "Bạn đã nhập sai định dạng nghề nghiệp");
                ngheNghiepTextField.setText("");
            }else{
                Nguoi nguoi = new Nguoi(hoVaTenTextField.getText(),Integer.parseInt(tuoiTextField.getText()),ngheNghiepTextField.getText(),Integer.parseInt(soCMNDTextField.getText()),soNhaTextField.getText());
                HoGiaDinh hgd = new HoGiaDinh(soNhaTextField.getText());
                if(khuPho.checkSoNha(hgd.getSoNha())){
                    for(HoGiaDinh h : khuPho.getList()){
                        if(h.getSoNha().equals(soNhaTextField.getText())){
                            h.themThanhVien(nguoi);
                            JOptionPane.showMessageDialog(rootPane, "Đã sửa thông tin người dân mã số " + soCMNDTextField.getText());
                            btnThem.setText("Thêm");
                            in();
                        }
                    }
                }else{
                    hgd.themThanhVien(nguoi);
                    khuPho.themHoGiaDinh(hgd);
                        JOptionPane.showMessageDialog(rootPane, "Đã sửa thông tin người dân mã số " + soCMNDTextField.getText());
                        btnThem.setText("Thêm");
                        in();
                }
            }
        }else{
            if(!checkfill()){
                JOptionPane.showMessageDialog(rootPane, "Bạn chưa điền đầy đủ thông tin");
            }else if(!checkFolmatTuoi(soCMNDTextField.getText())){
                JOptionPane.showMessageDialog(rootPane, "Định dạng sô CMND không hợp lệ");
                soCMNDTextField.setText("");
            }else if(!checkFolmatTuoi(tuoiTextField.getText())){
                JOptionPane.showMessageDialog(rootPane, "Định dạng tuổi không hợp lệ");
                tuoiTextField.setText("");
            }else if(Integer.parseInt(tuoiTextField.getText())<0){
                JOptionPane.showMessageDialog(rootPane, "Tuổi phải lớn hơn 0");
                tuoiTextField.setText("");
            }else if(!checkFolmatHoVaTen(hoVaTenTextField.getText())){
                JOptionPane.showMessageDialog(rootPane, "Bạn đã nhập sai định dạng họ và tên");
                hoVaTenTextField.setText("");
            }else if(!checkFolmatHoVaTen(ngheNghiepTextField.getText())){
                JOptionPane.showMessageDialog(rootPane, "Bạn đã nhập sai định dạng nghề nghiệp");
                ngheNghiepTextField.setText("");
            }else if(khuPho.checkCMND(Integer.parseInt(soCMNDTextField.getText()))){
                JOptionPane.showMessageDialog(rootPane, "Số CMND của bạn đã bị trùng lặp");
                soCMNDTextField.setText("");
            }else{
                Nguoi nguoi = new Nguoi(hoVaTenTextField.getText(),Integer.parseInt(tuoiTextField.getText()),ngheNghiepTextField.getText(),Integer.parseInt(soCMNDTextField.getText()),soNhaTextField.getText());
                HoGiaDinh hgd = new HoGiaDinh(soNhaTextField.getText());
                if(khuPho.checkSoNha(hgd.getSoNha())){
                    for(HoGiaDinh h : khuPho.getList()){
                        if(h.getSoNha().equals(soNhaTextField.getText())){
                            h.themThanhVien(nguoi);
                            JOptionPane.showMessageDialog(rootPane, "Đã thêm thông tin người dân mã số " + soCMNDTextField.getText());
                            in();
                        }
                    }
                }else{
                    hgd.themThanhVien(nguoi);
                    khuPho.themHoGiaDinh(hgd);
                        JOptionPane.showMessageDialog(rootPane, "Đã thêm thông tin người dân mã số " + soCMNDTextField.getText());
                        in();
                }
            }
        }
    }//GEN-LAST:event_btnThemActionPerformed
    
    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        hoVaTenTextField.setText("");
        soCMNDTextField.setText("");
        ngheNghiepTextField.setText("");
        tuoiTextField.setText("");
        soNhaTextField.setText("");
        timKiemTextField.setText("Nhập vào số CMND cần tìm");
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tableInfo.getModel();
        model.setRowCount(0);
        if(timKiemTextField.getText().equals("Nhập vào số CMND cần tìm")){
            JOptionPane.showMessageDialog(rootPane, "BẠN CHUA NHẬP SỐ CMND CẦN TÌM");
        }else if(!checkFolmatTuoi(timKiemTextField.getText())){
            JOptionPane.showMessageDialog(rootPane, "SỐ CMND KHÔNG HỢP LỆ");
        }else{
            int find = Integer.valueOf(timKiemTextField.getText());
            int i = 0;
            for(HoGiaDinh hgd : khuPho.getList()){
                for(Nguoi nguoi : hgd.getList()){
                    if(nguoi.getSoCMND() == find){
                        model.addRow(new Object[] {nguoi.getSoCMND(),nguoi.getHoTen(),nguoi.getTuoi(),nguoi.getNgheNghiep(),nguoi.getSoNha()});
                        i = 1;
                    }
                }
            }if(i == 0){
                JOptionPane.showMessageDialog(rootPane, "Không tìm thấy thông tin người dùng");
            }
        }
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnShowALLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowALLActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tableInfo.getModel();
        model.setRowCount(0);
        for(HoGiaDinh hgd : khuPho.getList()){
            for(Nguoi nguoi : hgd.getList()){
                    model.addRow(new Object[] {nguoi.getSoCMND(),nguoi.getHoTen(),nguoi.getTuoi(),nguoi.getNgheNghiep(),nguoi.getSoNha()});
            }
        }
    }//GEN-LAST:event_btnShowALLActionPerformed

    private void jMenuItem_OpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_OpenActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(this);
        if(chooser.getSelectedFile() == null){
            JOptionPane.showMessageDialog(rootPane, "BẠN CHƯA CHỌN FILE NÀO");
        }else{
        try {
            FileInputStream fis = new FileInputStream(chooser.getSelectedFile().getAbsolutePath());
            ObjectInputStream ois = new ObjectInputStream(fis);
            khuPho.setList((ArrayList<HoGiaDinh>)ois.readObject());
            JOptionPane.showMessageDialog(rootPane, "ĐỌC VÀ LẤY DỮ LIỆU FILE THÀNH CÔNG");
            fis.close();
            ois.close();
        } catch (IOException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(rootPane, "LỖI ĐỌC FILE");
        }
        }
    }//GEN-LAST:event_jMenuItem_OpenActionPerformed

    private void jMenuItem_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_SaveActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.showSaveDialog(this);
        if(chooser.getSelectedFile() == null){
            JOptionPane.showMessageDialog(rootPane, "BẠN CHƯA CHỌN FILE NÀO");
        }else{
        try {
            FileOutputStream fos = new FileOutputStream(chooser.getSelectedFile().getAbsolutePath());
            ObjectOutputStream oos = new ObjectOutputStream(fos);
            oos.writeObject(khuPho.getList());
            JOptionPane.showMessageDialog(rootPane, "GHI FILE THÀNH CÔNG");
            fos.close();
            oos.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(rootPane, "LỖI GHI FILE");
        }
        }
    }//GEN-LAST:event_jMenuItem_SaveActionPerformed

    private void timKiemTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timKiemTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timKiemTextFieldActionPerformed

    private void timKiemTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_timKiemTextFieldMouseClicked
        // TODO add your handling code here:
        timKiemTextField.setText("");
    }//GEN-LAST:event_timKiemTextFieldMouseClicked

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        try {
            int cmnd = Integer.parseInt(JOptionPane.showInputDialog("Nhập vào số CMND cần xóa"));
            if(!khuPho.checkCMND(cmnd)){
                JOptionPane.showMessageDialog(rootPane, "KHÔNG TÌM THẤY THÔNG TIN NGƯỜI DÙNG");
            }else{
            khuPho.xoaNguoi(cmnd);
            JOptionPane.showMessageDialog(rootPane, "ĐÃ XÓA THÔNG TIN NGƯỜI DÙNG SỐ CMND" + cmnd);
            in();
            }
        } catch (HeadlessException | NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "BẠN ĐÃ NHẬP SAI CÚ PHÁP SỐ CMND");
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.showSaveDialog(this);
        if(chooser.getSelectedFile() == null){
            JOptionPane.showMessageDialog(rootPane, "BẠN CHƯA CHỌN FILE NÀO");
        }else{
        try {
            FileOutputStream fos = new FileOutputStream(chooser.getSelectedFile().getAbsolutePath());
            ObjectOutputStream oos = new ObjectOutputStream(fos);
            oos.writeObject(khuPho.getList());
            JOptionPane.showMessageDialog(rootPane, "GHI FILE THÀNH CÔNG");
            fos.close();
            oos.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(rootPane, "LỖI GHI FILE");
        }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(this);
        if(chooser.getSelectedFile() == null){
            JOptionPane.showMessageDialog(rootPane, "BẠN CHƯA CHỌN FILE NÀO");
        }else{
        try {
            FileInputStream fis = new FileInputStream(chooser.getSelectedFile().getAbsolutePath());
            ObjectInputStream ois = new ObjectInputStream(fis);
            khuPho.setList((ArrayList<HoGiaDinh>)ois.readObject());
            JOptionPane.showMessageDialog(rootPane, "ĐỌC VÀ LẤY DỮ LIỆU FILE THÀNH CÔNG");
            fis.close();
            ois.close();
        } catch (IOException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(rootPane, "LỖI ĐỌC FILE");
        }
        }
    }//GEN-LAST:event_btnOpenActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        try {
            int cmnd = Integer.parseInt(JOptionPane.showInputDialog("Nhập vào số CMND của người dùng cần sửa thông tin"));
            if(!khuPho.checkCMND(cmnd)){
                JOptionPane.showMessageDialog(rootPane, "KHÔNG TÌM THẤY THÔNG TIN NGƯỜI DÙNG");
            }else{
                for(HoGiaDinh hgd : khuPho.getList()){
                    for(Nguoi nguoi : hgd.getList()){
                        if(nguoi.getSoCMND() == cmnd){
                            hoVaTenTextField.setText("");
                            soCMNDTextField.setText("");
                            ngheNghiepTextField.setText("");
                            tuoiTextField.setText("");
                            soNhaTextField.setText("");
                            hoVaTenTextField.setText(nguoi.getHoTen());
                            ngheNghiepTextField.setText(nguoi.getNgheNghiep());
                            soCMNDTextField.setText(String.valueOf(nguoi.getSoCMND()));
                            soNhaTextField.setText(String.valueOf(nguoi.getSoNha()));
                            tuoiTextField.setText(String.valueOf(nguoi.getTuoi()));
                            btnThem.setText("UPDATE");
                        }
                    }
                }
                khuPho.xoaNguoi(cmnd);
//                JOptionPane.showMessageDialog(rootPane, "ĐÃ SỬA THÔNG TIN NGƯỜI DÙNG SỐ CMND" + cmnd);
            }
        } catch (HeadlessException | NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "BẠN ĐÃ NHẬP SAI CÚ PHÁP SỐ CMND");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed
    
    public boolean checkfill(){
            if(hoVaTenTextField.getText().equals(""))return false;
            if(soCMNDTextField.getText().equals(""))return false;
            if(tuoiTextField.getText().equals(""))return false;
            if(ngheNghiepTextField.getText().equals(""))return false;
            if(soNhaTextField.getText().equals(""))return false;
            return true;
        }
    public boolean checkFolmatTuoi(String str){
        int a = 0;
        try {
            a = Integer.parseInt(str);
        } catch (Exception e) {
            return false;
        }
        return true;
    }
    
    public void xoaNguoi(int cmnd){
        for(HoGiaDinh hgd : khuPho.getList()){
                for(Nguoi nguoi : hgd.getList()){
                    if(nguoi.getSoCMND() == cmnd){
                        hgd.xoaThanhVien(nguoi);
                    }
                }
            }
    }
    
    public void in(){
        DefaultTableModel model = (DefaultTableModel) tableInfo.getModel();
        model.setRowCount(0);
        for(HoGiaDinh hgd : khuPho.getList()){
            for(Nguoi nguoi : hgd.getList()){
                    model.addRow(new Object[] {nguoi.getSoCMND(),nguoi.getHoTen(),nguoi.getTuoi(),nguoi.getNgheNghiep(),nguoi.getSoNha()});
            }
        }
    }
    
    public static boolean checkFolmatHoVaTen(String name) {
    for (int i = 0; i < name.length(); i++) {
        char c = name.charAt(i);
        if (isSpecialCharacter(c)) {
            return false;
        }
    }
    return true;
    }

    public static boolean isSpecialCharacter(char c) {
        return !(Character.isLetter(c) || Character.isWhitespace(c));
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyHoDanCu_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyHoDanCu_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyHoDanCu_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyHoDanCu_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLyHoDanCu_GUI().setVisible(true);
            }
        });
//        KhuPho khuPho = new KhuPho();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnOpen;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnShowALL;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnXoa;
    private javax.swing.JTextField hoVaTenTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem_Open;
    private javax.swing.JMenuItem jMenuItem_Save;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField ngheNghiepTextField;
    private javax.swing.JTextField soCMNDTextField;
    private javax.swing.JTextField soNhaTextField;
    private javax.swing.JTable tableInfo;
    private javax.swing.JTextField timKiemTextField;
    private javax.swing.JTextField tuoiTextField;
    // End of variables declaration//GEN-END:variables
}
